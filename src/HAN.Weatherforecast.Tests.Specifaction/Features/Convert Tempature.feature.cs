// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace HAN.Weatherforecast.Tests.Specifaction.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ConvertTempatureFeature : object, Xunit.IClassFixture<ConvertTempatureFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Convert Tempature.feature"
#line hidden
        
        public ConvertTempatureFeature(ConvertTempatureFeature.FixtureData fixtureData, HAN_Weatherforecast_Tests_Specifaction_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Convert Tempature", @"In order to reach a worldwide user base
As an app developer
I want to support both Celsius and Fahrenheit as the unit of temperature

The formula to convert Celsius to Fahrenheit is:
	°F = (°C * 9/5) + 32

The formula to convert Fahrenheit to Celsius is:
	°C = (°F - 32) * 5/9

37 °C is equivalent to 98.6 °F, but we only use whole numbers for the temperature.
We round to the nearest number, and when a number is halfway between two others,
it's rounded toward the nearest number that's away from zero.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Convert Celsius to Fahrenheit")]
        [Xunit.TraitAttribute("FeatureTitle", "Convert Tempature")]
        [Xunit.TraitAttribute("Description", "Convert Celsius to Fahrenheit")]
        [Xunit.InlineDataAttribute("Absolute Zero", "-273", "-459", new string[0])]
        [Xunit.InlineDataAttribute("Parity", "-40", "-40", new string[0])]
        [Xunit.InlineDataAttribute("Freezing point", "0", "32", new string[0])]
        [Xunit.InlineDataAttribute("Body Temperature", "37", "99", new string[0])]
        [Xunit.InlineDataAttribute("Boiling point", "100", "212", new string[0])]
        public virtual void ConvertCelsiusToFahrenheit(string @case, string celsius, string fahrenheit, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("case", @case);
            argumentsOfScenario.Add("celsius", celsius);
            argumentsOfScenario.Add("fahrenheit", fahrenheit);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Convert Celsius to Fahrenheit", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 18
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 20
 testRunner.When(string.Format("the temperature is {0} °C", celsius), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.Then(string.Format("the temperature is {0} °F", fahrenheit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Convert Fahrenheit to Celsius")]
        [Xunit.TraitAttribute("FeatureTitle", "Convert Tempature")]
        [Xunit.TraitAttribute("Description", "Convert Fahrenheit to Celsius")]
        [Xunit.InlineDataAttribute("Absolute Zero", "-459", "-273", new string[0])]
        [Xunit.InlineDataAttribute("Parity", "-40", "-40", new string[0])]
        [Xunit.InlineDataAttribute("Freezing point", "32", "0", new string[0])]
        [Xunit.InlineDataAttribute("Body Temperature", "99", "37", new string[0])]
        [Xunit.InlineDataAttribute("Boiling point", "212", "100", new string[0])]
        public virtual void ConvertFahrenheitToCelsius(string @case, string fahrenheit, string celsius, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("case", @case);
            argumentsOfScenario.Add("fahrenheit", fahrenheit);
            argumentsOfScenario.Add("celsius", celsius);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Convert Fahrenheit to Celsius", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 32
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 34
    testRunner.When(string.Format("the temperature is {0} °F", fahrenheit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 35
    testRunner.Then(string.Format("the temperature is {0} °C", celsius), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                ConvertTempatureFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                ConvertTempatureFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
